---
- name: install nfs requirements
  ansible.builtin.apt:
    name:
      - nfs-common
    state: present

- name: define nfs configurations
  ansible.builtin.set_fact:
    nfs_mounts:
      - name: "media"
        local_path: "/mnt/data"
        nfs_share: "10.77.1.101:/mnt/slow/media"
        owner: "media"
        group: "media"
      - name: "photos"
        local_path: "/mnt/photos"
        nfs_share: "10.77.1.101:/mnt/slow/photos"
        owner: "photos"
        group: "photos"
      - name: "nextcloud"
        local_path: "/mnt/nextcloud"
        nfs_share: "10.77.1.101:/mnt/slow/nextcloud"
        owner: "nextcloud"
        group: "nextcloud"
      - name: "music"
        local_path: "/mnt/music"
        nfs_share: "10.77.1.101:/mnt/slow/media/music"
        owner: "media"
        group: "media"
      - name: "audiobooks"
        local_path: "/mnt/audiobooks"
        nfs_share: "10.77.1.101:/mnt/slow/media/audiobooks"
        owner: "media"
        group: "media"

- name: check whether mount folders exist
  ansible.builtin.stat:
    path: "{{ item.local_path }}"
  register: mount_folders_stat
  loop: "{{ nfs_mounts }}"
  loop_control:
    label: "{{ item.name }}"

- name: create missing folders for nfs mounts
  ansible.builtin.file:
    path: "{{ item.item.local_path }}"
    state: directory
    mode: "0775"
    owner: "{{ item.item.owner }}"
    group: "{{ item.item.group }}"
  when: not item.stat.exists
  loop: "{{ mount_folders_stat.results }}"
  loop_control:
    label: "{{ item.item.name }}"

- name: mount nfs shares
  ansible.posix.mount:
    src: "{{ item.nfs_share }}"
    path: "{{ item.local_path }}"
    fstype: nfs
    opts: "rw,proto=tcp,nofail"
    state: mounted
  loop: "{{ nfs_mounts }}"
  loop_control:
    label: "{{ item.name }}"

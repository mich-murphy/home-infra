version: v1alpha1
debug: false
persist: true
machine:
  token: op://kubernetes/talos/machine-token
  ca:
    crt: op://kubernetes/talos/machine-ca-crt
    key: op://kubernetes/talos/machine-ca-key
  certSANs: []
  kubelet:
    image: ghcr.io/siderolabs/kubelet:v1.33.2
    extraMounts:
        - destination: /var/lib/longhorn
          type: bind
          source: /var/lib/longhorn
          options:
            - bind
            - rshared
            - rw
        - destination: /var/mnt/storage
          type: bind
          source: /var/mnt/storage
          options:
            - bind
            - rshared
            - rw
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
  network:
    interfaces:
      - deviceSelector:
          physical: true
        dhcp: true
        vip:
          ip: 10.77.1.200
  install:
    disk: /dev/sda
    image: factory.talos.dev/installer/3db570bedf4342804e5b4a418ec1dc4ac61ed0338f36ce4778e02dd8320b8457:v1.10.5
    wipe: false
  features:
    rbac: true
    stableHostname: true
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    kubePrism:
      enabled: true
      port: 7445
    hostDNS:
      enabled: true
      forwardKubeDNSToHost: true
  nodeLabels:
    node.kubernetes.io/exclude-from-external-load-balancers: ""
cluster:
  id: op://kubernetes/talos/cluster-id
  secret: op://kubernetes/talos/cluster-secret
  controlPlane:
    endpoint: https://10.77.1.200:6443
  clusterName: talos-prod
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.244.0.0/16
    serviceSubnets:
      - 10.96.0.0/12
  token: op://kubernetes/talos/cluster-token
  secretboxEncryptionSecret: op://kubernetes/talos/cluster-secretboxEncryptionSecret
  ca:
    crt: op://kubernetes/talos/cluster-ca-crt
    key: op://kubernetes/talos/cluster-ca-key
  aggregatorCA:
    crt: op://kubernetes/talos/cluster-aggregatorCA-crt
    key: op://kubernetes/talos/cluster-aggregatorCA-key
  serviceAccount:
    key: op://kubernetes/talos/cluster-serviceAccount-key
  apiServer:
    image: registry.k8s.io/kube-apiserver:v1.33.2
    certSANs:
      - 127.0.0.1
      - 10.77.1.200
    disablePodSecurityPolicy: true
    admissionControl:
      - name: PodSecurity
        configuration:
          apiVersion: pod-security.admission.config.k8s.io/v1beta1
          defaults:
            audit: restricted
            audit-version: latest
            enforce: baseline
            enforce-version: latest
            warn: restricted
            warn-version: latest
          exemptions:
            namespaces:
              - kube-system
              - longhorn-system
            runtimeClasses: []
            usernames: []
          kind: PodSecurityConfiguration
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
  controllerManager:
    image: registry.k8s.io/kube-controller-manager:v1.33.2
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.33.2
  scheduler:
    image: registry.k8s.io/kube-scheduler:v1.33.2
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service: {}
  etcd:
    ca:
      crt: op://kubernetes/talos/cluster-etcd-ca-crt
      key: op://kubernetes/talos/cluster-etcd-ca-key 
  allowSchedulingOnControlPlanes: true
  inlineManifests:
      - name: cilium-install
        contents: |
          ---
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: cilium-install
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: cluster-admin
          subjects:
          - kind: ServiceAccount
            name: cilium-install
            namespace: kube-system
          ---
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: cilium-install
            namespace: kube-system
          ---
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: cilium-install
            namespace: kube-system
          spec:
            backoffLimit: 10
            template:
              metadata:
                labels:
                  app: cilium-install
              spec:
                restartPolicy: OnFailure
                tolerations:
                  - operator: Exists
                  - effect: NoSchedule
                    operator: Exists
                  - effect: NoExecute
                    operator: Exists
                  - effect: PreferNoSchedule
                    operator: Exists
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                    effect: NoSchedule
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                    effect: NoExecute
                  - key: node-role.kubernetes.io/control-plane
                    operator: Exists
                    effect: PreferNoSchedule
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                        - matchExpressions:
                            - key: node-role.kubernetes.io/control-plane
                              operator: Exists
                serviceAccount: cilium-install
                serviceAccountName: cilium-install
                hostNetwork: true
                containers:
                - name: cilium-install
                  image: quay.io/cilium/cilium-cli:latest
                  env:
                  - name: KUBERNETES_SERVICE_HOST
                    valueFrom:
                      fieldRef:
                        apiVersion: v1
                        fieldPath: status.podIP
                  - name: KUBERNETES_SERVICE_PORT
                    value: "6443"
                  command:
                    - cilium
                    - install
                    - --set
                    - ipam.mode=kubernetes
                    - --set
                    - kubeProxyReplacement=true
                    - --set
                    - securityContext.capabilities.ciliumAgent={CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}
                    - --set
                    - securityContext.capabilities.cleanCiliumState={NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}
                    - --set
                    - cgroup.autoMount.enabled=false
                    - --set
                    - cgroup.hostRoot=/sys/fs/cgroup
                    - --set
                    - k8sServiceHost=localhost
                    - --set
                    - k8sServicePort=7445
---
apiVersion: v1alpha1
kind: ExtensionServiceConfig
name: tailscale
environment:
  - op://kubernetes/tailscale/environment-TS_AUTHKEY
  - TS_ROUTES=10.96.0.0/12,10.77.1.200/32

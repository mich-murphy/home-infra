services:
  miniflux:
    image: miniflux/miniflux:2.2.14@sha256:02e50d5b277857e3600c14ec1a6a064a82320077914d8eb546691a5f4c1d406c
    container_name: miniflux
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
      - miniflux-backend
    environment:
      - DATABASE_URL=postgres://miniflux:${DB_PASSWORD}@miniflux-db/miniflux?sslmode=disable
      - RUN_MIGRATIONS=1
      - CREATE_ADMIN=1
      - ADMIN_USERNAME=admin
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - BASE_URL=https://miniflux.local.elmurphy.com
    labels:
      - traefik.enable=true
      - traefik.http.routers.miniflux.rule=Host(`miniflux.local.elmurphy.com`)
      - traefik.http.routers.miniflux.tls=true
      - traefik.http.services.miniflux.loadbalancer.server.port=8080
    depends_on:
      miniflux-db:
        condition: service_healthy
    restart: unless-stopped

  miniflux-db:
    image: postgres:18-alpine@sha256:0ce0d1fa5bf54b7b338e09829ab76b479dbd0702da50bf0cdf5c258208e47f40
    container_name: miniflux-db
    security_opt:
      - no-new-privileges:true
    networks:
      - miniflux-backend
    environment:
      - POSTGRES_USER=miniflux
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=miniflux
    volumes:
      - miniflux-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "miniflux"]
      interval: 10s
      start_period: 30s
    restart: unless-stopped

volumes:
  miniflux-db:
    name: miniflux-db

networks:
  proxy:
    external: true
  miniflux-backend:
    name: miniflux-backend
    internal: true
    ipam:
      config:
        - subnet: 172.80.1.0/24

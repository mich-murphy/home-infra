x-common:
  database: &db-environment
    MYSQL_PASSWORD: &db-password ${MYSQL_PASSWORD}
    MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD}
  panel: &panel-environment
    APP_URL: "https://pterodactyl-panel.local.elmurphy.com"
    APP_TIMEZONE: ${TZ}
    APP_SERVICE_AUTHOR: "noreply@example.com"
  mail: &mail-environment
    MAIL_FROM: "noreply@example.com"
    MAIL_DRIVER: "smtp"
    MAIL_HOST: "mail"
    MAIL_PORT: "1025"
    MAIL_USERNAME: ""
    MAIL_PASSWORD: ""
    MAIL_ENCRYPTION: "true"

#
# ------------------------------------------------------------------------------------------
# DANGER ZONE BELOW
#
# The remainder of this file likely does not need to be changed. Please only make modifications
# below if you understand what you are doing.
#
services:
  database:
    image: mariadb:10.11@sha256:d32fb713355eacb8a0798638e60f1d72b04923f98232f123c29b2928e3035d22
    container_name: pterodactyl-db
    networks:
      - pterodactyl-backend
    restart: unless-stopped
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - pterodactyl-db:/var/lib/mysql
    environment:
      <<: *db-environment
      MYSQL_DATABASE: "panel"
      MYSQL_USER: "pterodactyl"

  cache:
    image: redis:alpine@sha256:73734b014e53b3067916918b70718ca188c16895511a272a020c9a71084eecda
    container_name: pterodactyl-cache
    networks:
      - pterodactyl-backend
    restart: unless-stopped

  # NOTE: create initial user with `docker exec -it ptero-panel php artisan p:user:make`
  panel:
    image: ghcr.io/pterodactyl/panel:latest@sha256:3ad185c83818944cfd4dba4dcefbca5ffb64655aaa63363f8f76ce41cd19873f
    container_name: pterodactyl-panel
    networks:
      - proxy
      - pterodactyl-backend
    restart: unless-stopped
    links:
      - database
      - cache
    volumes:
      - pterodactyl-panel-data:/app/var/
      - pterodactyl-panel-nginx:/etc/nginx/http.d/
      - pterodactyl-panel-logs:/app/storage/logs
    environment:
      <<: [*panel-environment, *mail-environment]
      DB_PASSWORD: *db-password
      APP_ENV: "production"
      APP_ENVIRONMENT_ONLY: "false"
      CACHE_DRIVER: "redis"
      SESSION_DRIVER: "redis"
      QUEUE_DRIVER: "redis"
      REDIS_HOST: "cache"
      DB_HOST: "database"
      DB_PORT: "3306"
      TRUSTED_PROXIES: "*"
    labels:
      - traefik.enable=true
      - traefik.http.routers.pterodactyl-panel.rule=Host(`pterodactyl-panel.local.elmurphy.com`)
      - traefik.http.routers.pterodactyl-panel.tls=true
      - traefik.http.services.pterodactyl-panel.loadbalancer.server.port=80

  wings:
    image: ghcr.io/pterodactyl/wings:latest@sha256:98a5b9622cd152c43f1795fbc443934a25828cb1b3f7b5979cd5efb58175e869
    container_name: pterodactyl-wings
    restart: unless-stopped
    networks:
      - proxy
      - wings0
    ports:
      # - "8080:8080"
      - 2022:2022
    tty: true
    environment:
      TZ: ${TZ}
      WINGS_UID: 988
      WINGS_GID: 988
      WINGS_USERNAME: pterodactyl
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers/:/var/lib/docker/containers/
      - /tmp/pterodactyl/:/tmp/pterodactyl/
      - /etc/ssl/certs:/etc/ssl/certs:ro
      - pterodactyl-wings-data:/etc/pterodactyl/
      - pterodactyl-server-data:/var/lib/pterodactyl/
      - pterodactyl-wings-logs:/var/log/pterodactyl/
    labels:
      - traefik.enable=true
      - traefik.http.routers.pterodactyl-wings.rule=Host(`pterodactyl-wings.local.elmurphy.com`)
      - traefik.http.routers.pterodactyl-wings.tls=true
      - traefik.http.services.pterodactyl-wings.loadbalancer.server.port=443

volumes:
  pterodactyl-db:
    name: pterodactyl-db
  pterodactyl-panel-data:
    name: pterodactyl-panel-data
  pterodactyl-panel-nginx:
    name: pterodactyl-panel-nginx
  pterodactyl-panel-logs:
    name: pterodactyl-panel-logs
  pterodactyl-wings-data:
    name: pterodactyl-wings-data
  pterodactyl-server-data:
    name: pterodactyl-server-data
  pterodactyl-wings-logs:
    name: pterodactyl-wings-logs

networks:
  proxy:
    external: true
  pterodactyl-backend:
    name: pterodactyl-backend
    ipam:
      config:
        - subnet: 172.40.0.0/16
  wings0:
    name: wings0
    driver: bridge
    ipam:
      config:
        - subnet: "172.41.0.0/16"
    driver_opts:
      com.docker.network.bridge.name: wings0

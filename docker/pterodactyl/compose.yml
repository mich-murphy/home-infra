---
services:
  # NOTE: create initial user with `docker exec -it ptero-panel php artisan p:user:make`
  panel:
    image: ghcr.io/pterodactyl/panel:latest
    container_name: ptero-panel
    networks:
      - proxy
      - ptero
    environment:
      - APP_URL=http://example.com
      - APP_TIMEZONE=${TZ}
      - APP_SERVICE_AUTHOR=noreply@example.com
      - MAIL_FROM=noreply@example.com
      - MAIL_DRIVER=smtp
      - MAIL_HOST=mail
      - MAIL_PORT=1025
      - MAIL_USERNAME=""
      - MAIL_PASSWORD=""
      - MAIL_ENCRYPTION=true
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_ENVIRONMENT_ONLY=false
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_DRIVER=redis
      - REDIS_HOST=cache
      - DB_HOST=database
      - DB_PORT=3306
    volumes:
      - ptero-data:/app/var/
      - ptero-nginx:/etc/nginx/http.d/
      # - "/srv/pterodactyl/certs/:/etc/letsencrypt/"
      - ptero-logs:/app/storage/logs
    links:
      - database
      - cache
    # ports:
    #   - "80:80"
    #   - "443:443"
    labels:
      - traefik.enable=true
      - traefik.http.routers.pterodactyl.rule=Host(`pterodactyl.local.elmurphy.com`)
      - traefik.http.routers.pterodactyl.tls=true
      - traefik.http.services.pterodactyl.loadbalancer.server.port=80
    restart: unless-stopped

  database:
    image: mariadb:10.5
    container_name: ptero-db
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - ptero
    environment:
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=panel
      - MYSQL_USER=pterodactyl
    volumes:
      - ptero-db:/var/lib/mysql
    restart: unless-stopped

  cache:
    image: redis:alpine
    container_name: ptero-cache
    networks:
      - ptero
    restart: unless-stopped

  wings:
    image: ghcr.io/pterodactyl/wings:latest
    container_name: ptero-wings
    tty: true
    networks:
      - ptero
      - ptero-wings
    environment:
      - TZ=${TZ}
      - WINGS_UID=988
      - WINGS_GID=988
      - WINGS_USERNAME=pterodactyl
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers/:/var/lib/docker/containers/
      - ptero-wings-etc:/etc/pterodactyl/
      - ptero-wings-lib:/var/lib/pterodactyl/
      - ptero-wings-logs:/var/log/pterodactyl/
      - type: tmpfs
        target: /tmp/pterodactyl/
      # - "/etc/ssl/certs:/etc/ssl/certs:ro"
    ports:
      # - "8080:8080"
      - "2022:2022"
    labels:
      - traefik.enable=true
      - traefik.http.routers.pterodactyl-wings.rule=Host(`pterodactyl-wings.local.elmurphy.com`)
      - traefik.http.routers.pterodactyl-wings.tls=true
      - traefik.http.services.pterodactyl-wings.loadbalancer.server.port=443
    restart: unless-stopped

volumes:
  ptero-data:
    name: ptero-data
  ptero-nginx:
    name: ptero-nginx
  ptero-logs:
    name: ptero-logs
  ptero-db:
    name: ptero-db
  ptero-wings-etc:
    name: ptero-wings-etc
  ptero-wings-lib:
    name: ptero-wings-lib
  ptero-wings-logs:
    name: ptero-wings-logs

networks:
  proxy:
    external: true
  ptero:
    name: ptero
    ipam:
      config:
        - subnet: 172.40.1.0/24
  ptero-wings:
    name: ptero-wings
    driver: bridge
    ipam:
      config:
        - subnet: "172.41.1.0/24"
    driver_opts:
      com.docker.network.bridge.name: ptero-wings


apiVersion: apps/v1
kind: Deployment
metadata:
  name: sonarr
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sonarr
  template:
    metadata:
      labels:
        app: sonarr
    spec:
      strategy:
        type: Recreate
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
      containers:
        - name: prowlarr
          image: lscr.io/linuxserver/sonarr:4.0.15.2941-ls288@sha256:b0ac15772c04f329964ed79cb446ab23fd1ee28f33b58b10f0264feac17d33cd
          ports:
            - containerPort: 8989
          env:
            - name: TZ
              value: Australia/Melbourne
          livenessProbe:
            httpGet:
              path: /ping
              port: 8989
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ping
              port: 8989
            initialDelaySeconds: 3
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
          securityContext:
            allowPriviligeEscalation: false
            capabilities:
              drop:
                - NET_RAW
                - SYS_CHROOT
                - MKNOD
                - AUDIT_WRITE
          volumeMounts:
            - name: sonarr-data
              mountPath: /config
            - name: media
              mountPath: /data
          resources:
            requests:
              cpu: 100m
            limits:
              memory: 1Gi
      volumes:
        - name: sonarr-data
          persistentVolumeClaim:
            claimName: sonarr-data-pvc
        - name: media
          nfs:
            server: 10.77.1.101
            path: /mnt/slow/media
            readOnly: false
